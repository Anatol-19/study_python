{"name": "test_delete", "status": "failed", "statusDetails": {"message": "AssertionError: Expected no rows, but found 1\nassert 1 == 0\n +  where 1 = len([(16893, True, datetime.datetime(2024, 7, 26, 19, 38, 24, 338335, tzinfo=datetime.timezone.utc), datetime.datetime(2024, 7, 26, 19, 38, 24, 338335, tzinfo=datetime.timezone.utc), 'Mcmahon-Smith', 'Clear national later cut. Customer somebody wish contain owner. Thing must pull someone movie ball.\\nLand task plan free music.\\nNation take another some. Hot alone during.', None)])", "trace": "def test_delete():\n        company = db.create()\n        company_id = company[\"id\"]\n    \n        deleted = api.delete_company(company_id)\n        assert deleted[\"id\"] == company_id\n        assert deleted[\"name\"] == company[\"name\"]\n        assert deleted[\"description\"] == company[\"description\"]\n        assert deleted[\"isActive\"] is True\n    \n        rows = db.get_company_by_id(company_id)\n>       assert len(rows) == 0, f\"Expected no rows, but found {len(rows)}\"\nE       AssertionError: Expected no rows, but found 1\nE       assert 1 == 0\nE        +  where 1 = len([(16893, True, datetime.datetime(2024, 7, 26, 19, 38, 24, 338335, tzinfo=datetime.timezone.utc), datetime.datetime(2024, 7, 26, 19, 38, 24, 338335, tzinfo=datetime.timezone.utc), 'Mcmahon-Smith', 'Clear national later cut. Customer somebody wish contain owner. Thing must pull someone movie ball.\\nLand task plan free music.\\nNation take another some. Hot alone during.', None)])\n\ntest_Company.py:77: AssertionError"}, "start": 1722022704522, "stop": 1722022707444, "uuid": "12df464e-9e40-4b53-9f56-82bed9cf2a1c", "historyId": "bc30055006b810191b7725e738d8cfb0", "testCaseId": "bc30055006b810191b7725e738d8cfb0", "fullName": "lesson_9.X_Clients.test_Company#test_delete", "labels": [{"name": "parentSuite", "value": "lesson_9.X_Clients"}, {"name": "suite", "value": "test_Company"}, {"name": "host", "value": "Anatol"}, {"name": "thread", "value": "18276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "lesson_9.X_Clients.test_Company"}]}